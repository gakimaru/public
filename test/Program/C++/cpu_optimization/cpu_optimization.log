----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.096091800
  After1   ... *elapsed time=0.037036700
  After2   ... *elapsed time=0.032029000
  Appendix ... *elapsed time=0.194183600  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.052049300
  After1   ... *elapsed time=0.058054800
  After2   ... *elapsed time=0.058055500
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.190181200  sum=1974919424
  After    ... *elapsed time=0.055052500  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.432411500  sum=-525080576
  After    ... *elapsed time=0.107102100  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.637608200  count=36760000
  After    ... *elapsed time=0.581552900  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.271258400
  After1   ... *elapsed time=0.126121700
  After2   ... *elapsed time=0.072068600
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.242228800
  After    ... *elapsed time=0.206196500
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.191182700
  After    ... *elapsed time=0.037035800
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.909865200
  After    ... *elapsed time=0.382365200
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.107102000
  After    ... *elapsed time=0.027025800
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.360342300
  After    ... *elapsed time=0.130125500
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.697663400
  After    ... *elapsed time=0.489465800
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.110105300
  After    ... *elapsed time=0.088084200
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.167160100
  After    ... *elapsed time=0.146137800
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.382365200
  After    ... *elapsed time=0.989942600
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.127120600
  After    ... *elapsed time=0.051048300
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.244232600
  After    ... *elapsed time=0.214203900
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
