----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.014122000
  After1   ... *elapsed time=0.012208000
  After2   ... *elapsed time=0.013653000
  Appendix ... *elapsed time=0.055288000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.057933000
  After1   ... *elapsed time=0.057574000
  After2   ... *elapsed time=0.058984000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.163251000  sum=-1390256896
  After    ... *elapsed time=0.020440000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.346567000  sum=589612288
  After    ... *elapsed time=0.024792000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.457245000  count=35860000
  After    ... *elapsed time=0.297065000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.543438000
  After1   ... *elapsed time=0.136287000
  After2   ... *elapsed time=0.074907000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.196780000
  After    ... *elapsed time=0.184276000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.491775000
  After    ... *elapsed time=0.082012000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.768119000
  After    ... *elapsed time=0.345834000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.065276000
  After    ... *elapsed time=0.022662000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.180175000
  After    ... *elapsed time=0.100460000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.721308000
  After    ... *elapsed time=0.396500000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.170325000
  After    ... *elapsed time=0.073405000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.475600000
  After    ... *elapsed time=0.135317000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=7.028966000
  After    ... *elapsed time=0.795810000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.073102000
  After    ... *elapsed time=0.041880000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.250246000
  After    ... *elapsed time=0.184944000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
