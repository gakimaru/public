----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.095090900
  After1   ... *elapsed time=0.026024600
  After2   ... *elapsed time=0.026024900
  Appendix ... *elapsed time=0.196186600  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.083080300
  After1   ... *elapsed time=0.062059000
  After2   ... *elapsed time=0.059057500
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.180170400  sum=1974919424
  After    ... *elapsed time=0.055052200  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.423401500  sum=-525080576
  After    ... *elapsed time=0.058056300  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.629600100  count=36760000
  After    ... *elapsed time=0.520495000  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.274260200
  After1   ... *elapsed time=0.124119400
  After2   ... *elapsed time=0.073069800
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.211200600
  After    ... *elapsed time=0.207197900
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.190181000
  After    ... *elapsed time=0.037035200
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.858817400
  After    ... *elapsed time=0.373358100
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108100600
  After    ... *elapsed time=0.027024600
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.359342300
  After    ... *elapsed time=0.149142800
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.716682200
  After    ... *elapsed time=0.334319400
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.109104100
  After    ... *elapsed time=0.090085400
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.169161300
  After    ... *elapsed time=0.156148100
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.440420300
  After1   ... *elapsed time=0.944898600
  After2(bm).. *elapsed time=1.931840400
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.128122300
  After    ... *elapsed time=0.049045800
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.248237200
  After    ... *elapsed time=0.178169500
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
