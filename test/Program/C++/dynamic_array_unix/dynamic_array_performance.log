--------------------------------------------------------------------------------
[Test for dynamic_array::container(Primitive type)]

[push_back]
size=9, max_size=20(20)
array= 5 8 3 1 7 4 13 10 5
array(reverse)= 5 10 13 4 7 1 3 8 5

[resize(expand)]
size=12, max_size=20(20)
array= 5 8 3 1 7 4 13 10 5 1000 1000 1000

[sort]
size=12, max_size=20(20)
array= 1 3 4 5 5 7 8 10 13 1000 1000 1000

[custom sort]
size=12, max_size=20(20)
array= 1000 1000 1000 13 10 8 7 5 5 4 3 1

[pop_back(1)]
size=11, max_size=20(20)
array= 1000 1000 1000 13 10 8 7 5 5 4 3

[pop_back(2)]
pop_val=[3]
size=10, max_size=20(20)
array= 1000 1000 1000 13 10 8 7 5 5 4

[find]
size=10, max_size=20(20)
array= 1000 1000 1000 13 10 8 7 5 5 4
find_value(5)=5 next=5
find_value(6)=(not found)
find_value(7)=7 next=5

[binary search(before sort)]
size=10, max_size=20(20)
array= 1000 1000 1000 13 10 8 7 5 5 4
binary_search_value(5)=(not found)
binary_search_value(6)=(not found)
binary_search_value(7)=(not found)

[binary search(after sort)]
size=10, max_size=20(20)
array= 4 5 5 7 8 10 13 1000 1000 1000
binary_search_value(5)=5 prev=4
binary_search_value(6)=(not found)
binary_search_value(7)=7 prev=5

[erase(1)]
size=8, max_size=20(20)
array= 4 5 5 7 8 10 1000 1000

[erase(2)]
size=6, max_size=20(20)
array= 4 5 5 7 1000 1000

[insert]
size=11, max_size=20(20)
array= 4 999 999 999 999 999 5 5 7 1000 1000

[resize(shrink)]
size=5, max_size=20(20)
array= 4 999 999 999 999

[shrink_to_fit]
size=5, max_size=5(20)
array= 4 999 999 999 999

[assign]
size=5, max_size=5(20)
array= 0 0 0 0 0
--------------------------------------------------------------------------------
[Test for dynamic_array::container(User defined type)]

[push_back(1)]
size=3, max_size=20(20)
array= [5:101] [8:102] [3:103]
array(reverse)= [3:103] [8:102] [5:101]

[push_back(2)]
size=9, max_size=20(20)
array= [5:101] [8:102] [3:103] [1:104] [7:105] [4:106] [13:107] [10:108] [5:109]

[resize(1)]
size=12, max_size=20(20)
array= [5:101] [8:102] [3:103] [1:104] [7:105] [4:106] [13:107] [10:108] [5:109] [1000:1000] [1000:1000] [1000:1000]

[resize(2)]
size=15, max_size=20(20)
array= [5:101] [8:102] [3:103] [1:104] [7:105] [4:106] [13:107] [10:108] [5:109] [1000:1000] [1000:1000] [1000:1000] [1001:1001] [1001:1001] [1001:1001]

[sort]
size=15, max_size=20(20)
array= [1:104] [3:103] [4:106] [5:101] [5:109] [7:105] [8:102] [10:108] [13:107] [1000:1000] [1000:1000] [1000:1000] [1001:1001] [1001:1001] [1001:1001]

[custom sort]
size=15, max_size=20(20)
array= [1001:1001] [1001:1001] [1001:1001] [1000:1000] [1000:1000] [1000:1000] [13:107] [10:108] [8:102] [7:105] [5:109] [5:101] [4:106] [3:103] [1:104]

[pop_back(1)]
size=14, max_size=20(20)
array= [1001:1001] [1001:1001] [1001:1001] [1000:1000] [1000:1000] [1000:1000] [13:107] [10:108] [8:102] [7:105] [5:109] [5:101] [4:106] [3:103]

[pop_back(2)]
pop_val=[3:103]
size=13, max_size=20(20)
array= [1001:1001] [1001:1001] [1001:1001] [1000:1000] [1000:1000] [1000:1000] [13:107] [10:108] [8:102] [7:105] [5:109] [5:101] [4:106]

[find]
size=13, max_size=20(20)
array= [1001:1001] [1001:1001] [1001:1001] [1000:1000] [1000:1000] [1000:1000] [13:107] [10:108] [8:102] [7:105] [5:109] [5:101] [4:106]
find_value(key=5)= [5:109] next=[5:101]
find_value(key=6)=(not found)
find_value(key=7)= [7:105] next=[5:109]

[binary search(before sort)]
size=13, max_size=20(20)
array= [1001:1001] [1001:1001] [1001:1001] [1000:1000] [1000:1000] [1000:1000] [13:107] [10:108] [8:102] [7:105] [5:109] [5:101] [4:106]
binary_search_value(key=5)=(not found)
binary_search_value(key=6)=(not found)
binary_search_value(key=7)=(not found)

[binary search(after sort)]
size=13, max_size=20(20)
array= [4:106] [5:101] [5:109] [7:105] [8:102] [10:108] [13:107] [1000:1000] [1000:1000] [1000:1000] [1001:1001] [1001:1001] [1001:1001]
binary_search_value(key=5)= [5:101] prev=[4:106]
binary_search_value(key=6)=(not found)
binary_search_value(key=7)= [7:105] prev=[5:109]

[erase(1)]
size=11, max_size=20(20)
array= [4:106] [5:101] [5:109] [7:105] [8:102] [10:108] [13:107] [1000:1000] [1000:1000] [1001:1001] [1001:1001]

[erase(2)]
size=9, max_size=20(20)
array= [4:106] [5:101] [5:109] [7:105] [8:102] [10:108] [13:107] [1001:1001] [1001:1001]

[insert(1)]
size=14, max_size=20(20)
array= [4:106] [99:999] [99:999] [99:999] [99:999] [99:999] [5:101] [5:109] [7:105] [8:102] [10:108] [13:107] [1001:1001] [1001:1001]

[insert(2)]
size=16, max_size=20(20)
array= [4:106] [99:999] [99:999] [99:999] [99:999] [99:999] [5:101] [5:109] [7:105] [8:102] [88:888] [88:888] [10:108] [13:107] [1:104] [0:0]

[resize(shrink)]
size=5, max_size=20(20)
array= [4:106] [99:999] [99:999] [99:999] [99:999]

[shrink_to_fit]
size=5, max_size=5(20)
array= [4:106] [99:999] [99:999] [99:999] [99:999]

[assign(1)]
size=5, max_size=5(20)
array= [0:0] [0:0] [99:999] [99:999] [99:999]

[assign(2)]
size=5, max_size=5(20)
array= [-1:0] [-1:0] [-1:0] [-1:0] [-1:0]
--------------------------------------------------------------------------------
[Test for dynamic_array::container(User defined type with custom operator type)]

[push_back]
size=10, max_size=20(20)
array= [1:105] [1:108] [2:103] [2:101] [3:107] [3:104] [4:113] [4:111] [5:105] [5:106]

[sort]
size=10, max_size=20(20)
array= [2:101] [2:103] [3:104] [5:105] [1:105] [5:106] [3:107] [1:108] [4:111] [4:113]

[find]
find_value(value=101)= [2:101]
find_value(value=110)=(not found)
find_value(value=103)= [2:103]

[binary search]
binary_search_value(value=101)= [2:101]
binary_search_value(value=110)=(not found)
binary_search_value(value=103)= [2:103]

[sort with custom predicate]
size=10, max_size=20(20)
array= [1:108] [1:105] [2:103] [2:101] [3:107] [3:104] [4:113] [4:111] [5:106] [5:105]

[find with custom predicate(1)]
find(key=2, value=101)= [2:101]
find(key=2, value=102)=(not found)
find(key=2, value=103)= [2:103]

[binary search with custom comparison(1)]
binary_search_value(key=2, value=101)= [2:101]
binary_search_value(key=2, value=102)=(not found)
binary_search_value(key=2, value=103)= [2:103]

[find with custom predicate(2)]
find(key=2)= [2:103]
find(key=7)=(not found)
find(key=3)= [3:107]

[binary search with custom comparison(2)]
binary_search_value(key=2)= [2:103]
binary_search_value(key=7)=(not found)
binary_search_value(key=3)= [3:107]
--------------------------------------------------------------------------------
[Test for dynamic_array::container(User defined type for existing data)]

[sort(before)]
size=12, max_size=12(12)
array= [6:111] [2:103] [2:104] [4:107] [3:105] [3:106] [1:102] [5:109] [1:101] [4:108] [5:110] [6:112]

[sort(after)]
size=12, max_size=12(12)
array= [1:102] [1:101] [2:103] [2:104] [3:105] [3:106] [4:107] [4:108] [5:109] [5:110] [6:111] [6:112]
--------------------------------------------------------------------------------
[Test for dynamic_array::container(User defined type for multi-thread)]

[normal container]
(before)
size=0, max_size=100(100)
array= [3:3] [2:2] [0:0] [6:6] [5:5] [8:8] [4:4] [7:7] [9:9]
(after)
size=9, max_size=100(100)
array= [0:0] [8:8] [8:7] [9:9] [6:16] [0:0] [5:15] [8:18] [9:19]

[multi-thread container]
(before)
size=0, max_size=100(100)
array=(empty)
(after)
size=10, max_size=100(100)
array= [0:10] [1:11] [4:14] [9:19] [5:15] [8:18] [7:17] [3:13] [6:16] [2:12]
--------------------------------------------------------------------------------
[Test for performance dynamic_array]

[create container & assign() * 10000000]
*elapsed_time=0.024471000 sec

[clear() * 10000000]
*elapsed_time=0.000043000 sec

[push_back() * 10000000]
num=10000000
*elapsed_time=0.020021000 sec

[reverse sort]
*elapsed_time=0.195526000 sec

[sort]
*elapsed_time=0.174431000 sec

[iterator]
num=10000000
*elapsed_time=0.007273000 sec

[reverse_iterator]
num=10000000
*elapsed_time=0.010718000 sec

[find_value]
num=100
*elapsed_time=0.000018000 sec

[binary_search_value]
num=10000000
*elapsed_time=0.630399000 sec

[delete container]
*elapsed_time=0.016148000 sec

[finish]
*elapsed_time=1.079071000 sec
--------------------------------------------------------------------------------
[Test for performance std::vector]

[create container & assign() * 10000000]
*elapsed_time=0.023922000 sec

[clear() * 10000000]
*elapsed_time=0.000023000 sec

[push_back() * 10000000]
num=10000000
*elapsed_time=0.023259000 sec

[reverse sort]
*elapsed_time=0.167023000 sec

[sort]
*elapsed_time=0.157613000 sec

[iterator]
num=10000000
*elapsed_time=0.000024000 sec

[reverse_iterator]
num=10000000
*elapsed_time=0.000009000 sec

[find_value]
num=100
*elapsed_time=0.000007000 sec

[binary_search_value]
num=10000000
*elapsed_time=0.550412000 sec

[delete container]
*elapsed_time=0.013621000 sec

[finish]
*elapsed_time=0.935931000 sec

- end -
