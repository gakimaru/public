----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.093089500
  After1   ... *elapsed time=0.026026600
  After2   ... *elapsed time=0.027024700
  Appendix ... *elapsed time=0.212201200  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.072070400
  After1   ... *elapsed time=0.090084700
  After2   ... *elapsed time=0.070066900
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.192181300  sum=1974919424
  After    ... *elapsed time=0.059056300  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.403383900  sum=-525080576
  After    ... *elapsed time=0.058056000  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.611583300  count=36760000
  After    ... *elapsed time=0.520496000  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.275260700
  After1   ... *elapsed time=0.127120600
  After2   ... *elapsed time=0.073069500
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.213204700
  After    ... *elapsed time=0.207196200
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.192183900
  After    ... *elapsed time=0.036034600
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.870828200
  After    ... *elapsed time=0.367350800
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.107102100
  After    ... *elapsed time=0.028030800
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.380356300
  After    ... *elapsed time=0.130125500
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.730695100
  After    ... *elapsed time=0.361343800
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.109104100
  After    ... *elapsed time=0.089084700
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.173165200
  After    ... *elapsed time=0.156153000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.429404200
  After    ... *elapsed time=0.933891600
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.128120500
  After    ... *elapsed time=0.049047000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.246233100
  After    ... *elapsed time=0.187206400
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
