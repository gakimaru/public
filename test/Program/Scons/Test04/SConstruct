import os
import glob
import re

import SCons.Tool
import SCons.Tool.cc
import SCons.Defaults

SRC_SUFFIX = '.script'
OBJ_SUFFIX = '.script.i'

# Environment
env = Environment(
    LANG = 'ja_JP.UTF-8',
    TOOLS = ['mingw'],
    ENV = os.environ,
    CC = 'g++',
    CPPFLAGS = [ '-x', 'c++', '-E', '-include', 'script_header_common01.h', '-include', 'script_header_common02.h' ],
    CPPSUFFIXES = [ SRC_SUFFIX ],
    OBJSUFFIX = OBJ_SUFFIX,
    INCPREFIX = '-I',
    CPPPATH = [ 'include00', 'include01', 'include02' ],
    CPPDEFPREFIX = '-D',
    CPPDEFINES = [ 'XXX', 'YYY' ],
)
static_obj, shared_obj = SCons.Tool.createObjBuilders(env)
static_obj.add_action(SRC_SUFFIX, SCons.Defaults.CXXAction)
shared_obj.add_action(SRC_SUFFIX, SCons.Defaults.ShCXXAction)
static_obj.add_emitter(SRC_SUFFIX, SCons.Defaults.StaticObjectEmitter)
shared_obj.add_emitter(SRC_SUFFIX, SCons.Defaults.SharedObjectEmitter)
#print env.Dump()

# Source files
input_files = [
    'src/test00.script',
    'src/test01/test01.script',
    'src/test02/test02a.script',
    'src/test02/test02b.script',
]

# Run
#for input_file in [ glob.glob('src/*.script'), glob.glob('src/*/*.script') ]: #NG
#for input_file in glob.iglob('src/*.script'): #NG
for input_file in input_files:
    target_file = re.sub(r'\.' + SRC_SUFFIX + '$', OBJ_SUFFIX, re.sub(r'^src\/', 'preprocess/', input_file))
    #print input_file, ' -> ', target_file
    env.Object(target = target_file, source = input_file)
