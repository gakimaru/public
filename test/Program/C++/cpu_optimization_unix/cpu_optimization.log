----------------------------------------
[Optimize Test 01]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.121968000  sum=50235
  After1   ... *elapsed time=0.121939000  sum=50235
  After2   ... *elapsed time=0.119991000  sum=50235
  After3   ... *elapsed time=0.131975000  sum=50235
  After4   ... *elapsed time=0.152944000  sum=50235
  Appendix ... *elapsed time=0.521099000  sum=50235
----------------------------------------
[Optimize Test 02]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.578550000  sum=60686346
  After1   ... *elapsed time=0.616652000  sum=60686346
  After2   ... *elapsed time=0.603970000  sum=60686346
  After3   ... *elapsed time=0.593637000  sum=60686346
----------------------------------------
[Optimize Test 03]
Type1: *100000000 times repeated.
  Before   ... *elapsed time=0.189716000  sum=-1390256896
  After    ... *elapsed time=0.020574000  sum=-1390256896
Type2: *100000000 times repeated.
  Before   ... *elapsed time=0.364355000  sum=589612288
  After    ... *elapsed time=0.024966000  sum=589612288
Type3: *10000 times repeated.
  Before   ... *elapsed time=0.658020000  count=45010000
  After1   ... *elapsed time=0.428605000  count=45010000
  After2   ... *elapsed time=0.351752000  count=45010000
  After3   ... *elapsed time=0.349942000  count=45010000
  Appendix1... *elapsed time=0.351987000  count=45010000
  Appendix2... *elapsed time=0.690110000  count=45010000
  Appendix3... *elapsed time=0.693276000  count=45010000
----------------------------------------
[Optimize Test 04]
Type1: *10000 times repeated.
  Before   ... *elapsed time=0.546160000
  After1   ... *elapsed time=0.135717000
  After2   ... *elapsed time=0.075172000
----------------------------------------
[Optimize Test 05]
Type1: *10000000 times repeated.
  Before   ... *elapsed time=0.197672000
  After    ... *elapsed time=0.184680000
----------------------------------------
[Optimize Test 06]
Type1: *10000 times repeated.
  Before   ... *elapsed time=0.495377000
  After    ... *elapsed time=0.054593000
----------------------------------------
[Optimize Test 07]
Type1: *10000000 times repeated.
  Before   ... *elapsed time=0.729801000
  After    ... *elapsed time=0.364079000
Type2: *1000000 times repeated.
Type2(strlen):
  Before   ... *elapsed time=0.089612000
  After    ... *elapsed time=0.023228000
Type2(strcmp):
  Before   ... *elapsed time=0.175873000
  After    ... *elapsed time=0.099462000
Type2(strncmp):
  Before   ... *elapsed time=0.728393000
  After    ... *elapsed time=0.341878000
Type2(strchr):
  Before   ... *elapsed time=0.204818000
  After    ... *elapsed time=0.072382000
Type2(strrchr):
  Before   ... *elapsed time=0.443416000
  After    ... *elapsed time=0.132089000
Type2(strstr):
  Before   ... *elapsed time=6.938644000
  After1   ... *elapsed time=0.737517000
  After2(bm).. *elapsed time=1.967343000
Type2(strcpy):
  Before   ... *elapsed time=0.073663000
  After    ... *elapsed time=0.041029000
Type2(strncpy):
  Before   ... *elapsed time=0.277939000
  After    ... *elapsed time=0.139644000
----------------------------------------
[Optimize Test 08]
Type1: *100000000 times repeated.
  Before   ... *elapsed time=0.993433000
  After1   ... *elapsed time=0.967710000
  After2   ... *elapsed time=0.601004000
  After3   ... *elapsed time=0.850239000
Type2: *100000000 times repeated.
  Before   ... *elapsed time=0.564463000
  After1   ... *elapsed time=0.538670000
  After2   ... *elapsed time=0.599629000
  After3   ... *elapsed time=0.533273000
Type3: *100000000 times repeated.
  Before   ... *elapsed time=0.296148000
  After1   ... *elapsed time=0.293827000
Type4: *100000000 times repeated.
  Before   ... *elapsed time=0.644144000
  After1   ... *elapsed time=0.602934000
  After2   ... *elapsed time=0.509693000
Type5: *10000000 times repeated.
  Before   ... *elapsed time=0.875892000
  After1   ... *elapsed time=0.114584000
  After2   ... *elapsed time=0.431812000
Type6: *10000000 times repeated.
  Before   ... *elapsed time=0.100530000
  After1   ... *elapsed time=0.200825000
  After2   ... *elapsed time=0.082915000
Type7: *10000000 times repeated.
  Before   ... *elapsed time=0.118931000
  After1   ... *elapsed time=0.192800000
  After2   ... *elapsed time=0.083119000
Type8: *100000000 times repeated.
  Before   ... *elapsed time=0.511007000
  After1   ... *elapsed time=0.482319000
  After2   ... *elapsed time=0.512055000
Type9: *100000000 times repeated.
  Before   ... *elapsed time=0.536406000
  After1   ... *elapsed time=0.565670000
  After2   ... *elapsed time=0.590779000
----------------------------------------
[Optimize Test 09]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.136073000  sum=50235
  After1   ... *elapsed time=0.171511000  sum=50235
  After2   ... *elapsed time=0.119961000  sum=50235
  After3   ... *elapsed time=0.149461000  sum=50235
  After4   ... *elapsed time=0.150191000  sum=50235
  After5   ... *elapsed time=0.083724000  sum=50235
  Appendix ... *elapsed time=0.122900000  sum=50235
Type2: *50000 times repeated.
  Before   ... *elapsed time=0.543407000  sum=49
  After1   ... *elapsed time=0.545256000  sum=49
  After2   ... *elapsed time=0.546045000  sum=49
  After3   ... *elapsed time=0.537924000  sum=49
  After4   ... *elapsed time=0.541983000  sum=49
  After5   ... *elapsed time=0.558693000  sum=49
  Appendix ... *elapsed time=0.540094000  sum=49
Type3: *50000 times repeated.
  Before   ... *elapsed time=0.546130000  sum=49
  After1   ... *elapsed time=0.543687000  sum=49
  After2   ... *elapsed time=0.544552000  sum=49
  After3   ... *elapsed time=0.537107000  sum=49
  After4   ... *elapsed time=0.540935000  sum=49
  After5   ... *elapsed time=0.560541000  sum=49
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
