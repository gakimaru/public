============================================================
Initialize
============================================================
----- Make Array(shuffle1) -----
[NG] Array is NOT ordered! [NG=16 / record(s)=32]
Array is stable.
----- Make Array(shuffle2) -----
[NG] Array is NOT ordered! [NG=15 / record(s)=32]
Array is stable.
----- Make Array(shuffle3) -----
[NG] Array is NOT ordered! [NG=16 / record(s)=32]
Array is stable.
----- Make Array(ordered) -----
Array is ordered. [record(s)=32]
Array is stable.
----- Make Array(reversed) -----
[NG] Array is NOT ordered! [NG=10 / record(s)=32]
Array is stable.
----- Make Array(ordered_without_both_ends) -----
[NG] Array is NOT ordered! [NG=2 / record(s)=32]
Array is stable.
----- Make Array(hard_with_quick_sort) -----
[NG] Array is NOT ordered! [NG=10 / record(s)=32]
Array is stable.


============================================================
Sort type: [C-Library qsort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

============================================================
Sort type: [C-Library qsort]
* Total time       = 0.000019000 sec.
* Average time     = 0.000002714 sec.
* Min time         = 0.000001000 sec.
* Max time         = 0.000004000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000009000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with function)]
* Total time       = 0.000033000 sec.
* Average time     = 0.000004714 sec.
* Min time         = 0.000002000 sec.
* Max time         = 0.000009000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with inline function)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with inline function)]
* Total time       = 0.000023000 sec.
* Average time     = 0.000003286 sec.
* Min time         = 0.000001000 sec.
* Max time         = 0.000005000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with functor)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with functor)]
* Total time       = 0.000024000 sec.
* Average time     = 0.000003429 sec.
* Min time         = 0.000002000 sec.
* Max time         = 0.000005000 sec.
============================================================


============================================================
Sort type: [STL std::sort(with lamda)]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.

============================================================
Sort type: [STL std::sort(with lamda)]
* Total time       = 0.000023000 sec.
* Average time     = 0.000003286 sec.
* Min time         = 0.000002000 sec.
* Max time         = 0.000004000 sec.
============================================================


============================================================
Sort type: [STL std::stable_sort *Not inplace]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is stable.

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.

============================================================
Sort type: [STL std::stable_sort *Not inplace]
* Total time       = 0.000034000 sec.
* Average time     = 0.000004857 sec.
* Min time         = 0.000004000 sec.
* Max time         = 0.000006000 sec.
============================================================


============================================================
Sort type: [Bubble sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000013000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=216 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000015000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=260 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000011000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=198 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000024000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=465 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=58 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000017000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=312 count(s)]

============================================================
Sort type: [Bubble sort]
* Total time       = 0.000084000 sec.
* Average time     = 0.000012000 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.000024000 sec.
* Total Swapped    =      1509 count(s)
* Average  Swapped =       215 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       465 count(s)
============================================================


============================================================
Sort type: [Shaker sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000066000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=216 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000017000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=260 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000011000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=198 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000025000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=465 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=58 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000018000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=312 count(s)]

============================================================
Sort type: [Shaker sort]
* Total time       = 0.000141000 sec.
* Average time     = 0.000020143 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.000066000 sec.
* Total Swapped    =      1509 count(s)
* Average  Swapped =       215 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       465 count(s)
============================================================


============================================================
Sort type: [Odd-Even sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.002178000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=216 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.001616000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=260 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.001311000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=198 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000108000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.001632000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=465 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.001553000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=58 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.001560000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=312 count(s)]

============================================================
Sort type: [Odd-Even sort]
* Total time       = 0.009958000 sec.
* Average time     = 0.001422571 sec.
* Min time         = 0.000108000 sec.
* Max time         = 0.002178000 sec.
* Total Swapped    =      1509 count(s)
* Average  Swapped =       215 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       465 count(s)
============================================================


============================================================
Sort type: [Shear sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000294000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=192 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000425000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=193 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000323000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=188 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000302000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=86 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000348000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=217 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000306000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=103 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000316000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=167 count(s)]

============================================================
Sort type: [Shear sort]
* Total time       = 0.002314000 sec.
* Average time     = 0.000330571 sec.
* Min time         = 0.000294000 sec.
* Max time         = 0.000425000 sec.
* Total Swapped    =      1146 count(s)
* Average  Swapped =       163 count(s)
* Min Swapped      =        86 count(s)
* Max Swapped      =       217 count(s)
============================================================


============================================================
Sort type: [Comb sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=36 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=39 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=36 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=23 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=9 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=41 count(s)]

============================================================
Sort type: [Comb sort]
* Total time       = 0.000014000 sec.
* Average time     = 0.000002000 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.000003000 sec.
* Total Swapped    =       184 count(s)
* Average  Swapped =        26 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        41 count(s)
============================================================


============================================================
Sort type: [Gnome sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000012000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=216 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000014000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=260 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000011000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=198 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000024000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=465 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=58 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000016000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=312 count(s)]

============================================================
Sort type: [Gnome sort]
* Total time       = 0.000080000 sec.
* Average time     = 0.000011429 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.000024000 sec.
* Total Swapped    =      1509 count(s)
* Average  Swapped =       215 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =       465 count(s)
============================================================


============================================================
Sort type: [Quick sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=47 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=45 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=47 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=11 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=27 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=12 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=53 count(s)]

============================================================
Sort type: [Quick sort]
* Total time       = 0.000024000 sec.
* Average time     = 0.000003429 sec.
* Min time         = 0.000002000 sec.
* Max time         = 0.000005000 sec.
* Total Swapped    =       242 count(s)
* Average  Swapped =        34 count(s)
* Min Swapped      =        11 count(s)
* Max Swapped      =        53 count(s)
============================================================


============================================================
Sort type: [Selection sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=28 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=29 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=27 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=20 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=28 count(s)]

============================================================
Sort type: [Selection sort]
* Total time       = 0.000016000 sec.
* Average time     = 0.000002286 sec.
* Min time         = 0.000002000 sec.
* Max time         = 0.000003000 sec.
* Total Swapped    =       135 count(s)
* Average  Swapped =        19 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        29 count(s)
============================================================


============================================================
Sort type: [Heap sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=134 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000007000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=124 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=136 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000010000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=182 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=109 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000010000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=163 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=125 count(s)]

============================================================
Sort type: [Heap sort]
* Total time       = 0.000057000 sec.
* Average time     = 0.000008143 sec.
* Min time         = 0.000006000 sec.
* Max time         = 0.000010000 sec.
* Total Swapped    =       973 count(s)
* Average  Swapped =       139 count(s)
* Min Swapped      =       109 count(s)
* Max Swapped      =       182 count(s)
============================================================


============================================================
Sort type: [Insertion sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000007000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=29 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000007000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=28 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=24 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000011000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=30 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=30 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=25 count(s)]

============================================================
Sort type: [Insertion sort]
* Total time       = 0.000043000 sec.
* Average time     = 0.000006143 sec.
* Min time         = 0.000001000 sec.
* Max time         = 0.000011000 sec.
* Total Swapped    =       166 count(s)
* Average  Swapped =        23 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        30 count(s)
============================================================


============================================================
Sort type: [Shell sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=38 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=42 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=40 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000000000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=39 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=26 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=46 count(s)]

============================================================
Sort type: [Shell sort]
* Total time       = 0.000023000 sec.
* Average time     = 0.000003286 sec.
* Min time         = 0.000000000 sec.
* Max time         = 0.000005000 sec.
* Total Swapped    =       231 count(s)
* Average  Swapped =        33 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        46 count(s)
============================================================


============================================================
Sort type: [Inplace Merge sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000009000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=58 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000010000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=63 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=59 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000013000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=67 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000003000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=34 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000010000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=53 count(s)]

============================================================
Sort type: [Inplace Merge sort]
* Total time       = 0.000054000 sec.
* Average time     = 0.000007714 sec.
* Min time         = 0.000001000 sec.
* Max time         = 0.000013000 sec.
* Total Swapped    =       334 count(s)
* Average  Swapped =        47 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        67 count(s)
============================================================


============================================================
Sort type: [Intro sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=34 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=39 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=33 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000002000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=18 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000001000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=3 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000004000 sec.
Array is ordered. [record(s)=32]
Array is NOT STABLE.
[swapped=40 count(s)]

============================================================
Sort type: [Intro sort]
* Total time       = 0.000020000 sec.
* Average time     = 0.000002857 sec.
* Min time         = 0.000001000 sec.
* Max time         = 0.000004000 sec.
* Total Swapped    =       167 count(s)
* Average  Swapped =        23 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        40 count(s)
============================================================


============================================================
Sort type: [Radix sort]
============================================================

------------------------------
Sort array(shuffle1)
------------------------------
*elapsed time=0.000008000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=31 count(s)]

------------------------------
Sort array(shuffle2)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=31 count(s)]

------------------------------
Sort array(shuffle3)
------------------------------
*elapsed time=0.000006000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=31 count(s)]

------------------------------
Sort array(ordered)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=0 count(s)]

------------------------------
Sort array(reversed)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=32 count(s)]

------------------------------
Sort array(ordered_without_both_ends)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=5 count(s)]

------------------------------
Sort array(hard_with_quick_sort)
------------------------------
*elapsed time=0.000005000 sec.
Array is ordered. [record(s)=32]
Array is stable.
[swapped=31 count(s)]

============================================================
Sort type: [Radix sort]
* Total time       = 0.000040000 sec.
* Average time     = 0.000005714 sec.
* Min time         = 0.000005000 sec.
* Max time         = 0.000008000 sec.
* Total Swapped    =       161 count(s)
* Average  Swapped =        23 count(s)
* Min Swapped      =         0 count(s)
* Max Swapped      =        32 count(s)
============================================================


============================================================
Result(Summary)
============================================================
Array Element size = 80 Bytes
Array Element(s)   = 32 Count(s)
Total Array size   = 2560 Bytes
--------------------------------------------------------------------------------------------------------------------------------
- Sort name:                Elapsed Time (Sum/Average/Min/Max) [sec.]             Swapped (Sum/Average/Min/Max) [count(s)]
--------------------------------------------------------------------------------------------------------------------------------
[C-Library sort](Quick sort)
- qsort(inline-function):   0.000019000/  0.000002714/  0.000001000/  0.000004000
--------------------------------------------------------------------------------------------------------------------------------
[STL sort](Intro sort)
- std::sort(function):      0.000033000/  0.000004714/  0.000002000/  0.000009000
- std::sort(inline-func):   0.000023000/  0.000003286/  0.000001000/  0.000005000
- std::sort(functor):       0.000024000/  0.000003429/  0.000002000/  0.000005000
- std::sort(lambda):        0.000023000/  0.000003286/  0.000002000/  0.000004000
--------------------------------------------------------------------------------------------------------------------------------
[STL stable sort](Merge sort) *Not In-place sort
- std::stable_sort<S>:      0.000034000/  0.000004857/  0.000004000/  0.000006000
--------------------------------------------------------------------------------------------------------------------------------
[Exchange sorts]
- Bubble sort<S>:           0.000084000/  0.000012000/  0.000000000/  0.000024000       1509/        215/          0/        465
- Shaker sort<S>:           0.000141000/  0.000020143/  0.000000000/  0.000066000       1509/        215/          0/        465
- Odd-Even sort<S>:         0.009958000/  0.001422571/  0.000108000/  0.002178000       1509/        215/          0/        465
- Shear sort:               0.002314000/  0.000330571/  0.000294000/  0.000425000       1146/        163/         86/        217
- Comb sort:                0.000014000/  0.000002000/  0.000000000/  0.000003000        184/         26/          0/         41
- Gnome sort<S>:            0.000080000/  0.000011429/  0.000000000/  0.000024000       1509/        215/          0/        465
--------------------------------------------------------------------------------------------------------------------------------
[Partition-exchange sorts]
- Quick sort:               0.000024000/  0.000003429/  0.000002000/  0.000005000        242/         34/         11/         53
--------------------------------------------------------------------------------------------------------------------------------
[Selection sorts]
- Selection sort:           0.000016000/  0.000002286/  0.000002000/  0.000003000        135/         19/          0/         29
- Heap sort:                0.000057000/  0.000008143/  0.000006000/  0.000010000        973/        139/        109/        182
--------------------------------------------------------------------------------------------------------------------------------
[Insertion sorts]
- Insertion sort<S>:        0.000043000/  0.000006143/  0.000001000/  0.000011000        166/         23/          0/         30
- Shell sort:               0.000023000/  0.000003286/  0.000000000/  0.000005000        231/         33/          0/         46
--------------------------------------------------------------------------------------------------------------------------------
[Merge sorts]
- Inplace-Merge sort<S>:    0.000054000/  0.000007714/  0.000001000/  0.000013000        334/         47/          0/         67
--------------------------------------------------------------------------------------------------------------------------------
[Hybrid sorts]
- Intro sort:               0.000020000/  0.000002857/  0.000001000/  0.000004000        167/         23/          0/         40
--------------------------------------------------------------------------------------------------------------------------------
[Distribution sorts] *Not In-place sort
- Radix sort<S>:            0.000040000/  0.000005714/  0.000005000/  0.000008000        161/         23/          0/         32
--------------------------------------------------------------------------------------------------------------------------------
* <S> ... Stable sort algorithm.

target=-1, linearSearch=nullptr
target=0, linearSearch=[0, 1]
target=1, linearSearch=[1, 3]
target=2, linearSearch=[2, 9]
target=3, linearSearch=[3, 13]
target=4, linearSearch=[4, 4]
target=5, linearSearch=[5, 0]
target=6, linearSearch=[6, 5]
target=7, linearSearch=[7, 12]
target=8, linearSearch=[8, 11]
target=9, linearSearch=[9, 24]
target=10, linearSearch=[10, 2]
target=11, linearSearch=nullptr
target=12, linearSearch=nullptr
target=13, linearSearch=nullptr
target=14, linearSearch=nullptr
target=15, linearSearch=nullptr
target=16, linearSearch=nullptr
target=17, linearSearch=nullptr
target=18, linearSearch=nullptr
target=19, linearSearch=nullptr
target=20, linearSearch=nullptr
target=21, linearSearch=nullptr
target=22, linearSearch=nullptr
target=23, linearSearch=nullptr
target=24, linearSearch=nullptr
target=25, linearSearch=nullptr
target=26, linearSearch=nullptr
target=27, linearSearch=nullptr
target=28, linearSearch=nullptr
target=29, linearSearch=nullptr
target=30, linearSearch=nullptr
target=31, linearSearch=nullptr
target=32, linearSearch=nullptr
target=33, linearSearch=nullptr
target=34, linearSearch=nullptr
target=35, linearSearch=nullptr
target=36, linearSearch=nullptr
target=37, linearSearch=nullptr
target=38, linearSearch=nullptr
target=39, linearSearch=nullptr
target=-1, binarySearch=nullptr
target=0, binarySearch=[0, 22]
target=1, binarySearch=[1, 29]
target=2, binarySearch=[2, 9]
target=3, binarySearch=[3, 23]
target=4, binarySearch=[4, 15]
target=5, binarySearch=[5, 27]
target=6, binarySearch=[6, 26]
target=7, binarySearch=[7, 18]
target=8, binarySearch=[8, 11]
target=9, binarySearch=[9, 31]
target=10, binarySearch=[10, 10]
target=11, binarySearch=nullptr
target=12, binarySearch=nullptr
target=13, binarySearch=nullptr
target=14, binarySearch=nullptr
target=15, binarySearch=nullptr
target=16, binarySearch=nullptr
target=17, binarySearch=nullptr
target=18, binarySearch=nullptr
target=19, binarySearch=nullptr
target=20, binarySearch=nullptr
target=21, binarySearch=nullptr
target=22, binarySearch=nullptr
target=23, binarySearch=nullptr
target=24, binarySearch=nullptr
target=25, binarySearch=nullptr
target=26, binarySearch=nullptr
target=27, binarySearch=nullptr
target=28, binarySearch=nullptr
target=29, binarySearch=nullptr
target=30, binarySearch=nullptr
target=31, binarySearch=nullptr
target=32, binarySearch=nullptr
target=33, binarySearch=nullptr
target=34, binarySearch=nullptr
target=35, binarySearch=nullptr
target=36, binarySearch=nullptr
target=37, binarySearch=nullptr
target=38, binarySearch=nullptr
target=39, binarySearch=nullptr
============================================================
Finalize
============================================================
----- Delete array(shuffle1) -----
----- Delete array(shuffle2) -----
----- Delete array(shuffle3) -----
----- Delete array(ordered) -----
----- Delete array(reversed) -----
----- Delete array(ordered_without_both_ends) -----
----- Delete array(hard_with_quick_sort) -----


============================================================
End
============================================================
*elapsed time=0.016254000 sec.


--- Test for sort with pointer ---
[Before]
[9] [8] [7] [6] [5] [4] [3] [2] [1] [0] 
unordered=9
[After]
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9] 
unordered=0
--- End ---
