----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.093088800
  After1   ... *elapsed time=0.026025100
  After2   ... *elapsed time=0.027025800
  Appendix ... *elapsed time=0.196186500  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.066061800
  After1   ... *elapsed time=0.058055400
  After2   ... *elapsed time=0.087083400
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.178169600  sum=1974919424
  After    ... *elapsed time=0.056053300  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.406387100  sum=-525080576
  After    ... *elapsed time=0.059055400  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.637605900  count=36760000
  After    ... *elapsed time=0.545519200  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.272259400
  After1   ... *elapsed time=0.125119200
  After2   ... *elapsed time=0.089084600
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.245232000
  After    ... *elapsed time=0.208199400
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.195184500
  After    ... *elapsed time=0.037035100
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.887843100
  After    ... *elapsed time=0.367351400
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.106099600
  After    ... *elapsed time=0.018018400
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.356338800
  After    ... *elapsed time=0.101096100
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.701667100
  After    ... *elapsed time=0.505479600
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108103700
  After    ... *elapsed time=0.088083800
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.191181800
  After    ... *elapsed time=0.148139100
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.438418800
  After    ... *elapsed time=1.015964000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.127122700
  After    ... *elapsed time=0.119112200
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.261248900
  After    ... *elapsed time=0.443420200
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
