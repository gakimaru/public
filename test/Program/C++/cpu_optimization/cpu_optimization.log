----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.093089100
  After1   ... *elapsed time=0.025024100
  After2   ... *elapsed time=0.026024600
  Appendix ... *elapsed time=0.195185700  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.051048700
  After1   ... *elapsed time=0.058055100
  After2   ... *elapsed time=0.059056300
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.176168600  sum=1974919424
  After    ... *elapsed time=0.057053100  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.491468400  sum=-525080576
  After    ... *elapsed time=0.058054300  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.622593600  count=36760000
  After    ... *elapsed time=0.561534700  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.269257800
  After1   ... *elapsed time=0.123117300
  After2   ... *elapsed time=0.073069500
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.213202600
  After    ... *elapsed time=0.210199200
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.194184200
  After    ... *elapsed time=0.036034600
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.868827900
  After    ... *elapsed time=0.379362300
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108102900
  After    ... *elapsed time=0.027025800
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.360343200
  After    ... *elapsed time=0.130123700
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.743708300
  After    ... *elapsed time=0.368349000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.109103900
  After    ... *elapsed time=0.091087400
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.168161600
  After    ... *elapsed time=0.146139000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.437416500
  After1   ... *elapsed time=1.091038800
  After2(bm).. *elapsed time=1.907815200
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.125119000
  After    ... *elapsed time=0.050047500
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.245233800
  After    ... *elapsed time=0.178170400
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
