----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.093089200
  After1   ... *elapsed time=0.027025800
  After2   ... *elapsed time=0.026024600
  Appendix ... *elapsed time=0.192183300  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.061057200
  After1   ... *elapsed time=0.058055200
  After2   ... *elapsed time=0.057054200
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.189181300  sum=1974919424
  After    ... *elapsed time=0.056053600  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.426404500  sum=-525080576
  After    ... *elapsed time=0.058055400  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.610582200  count=36760000
  After    ... *elapsed time=0.530506200  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.270256700
  After1   ... *elapsed time=0.125117900
  After2   ... *elapsed time=0.079076500
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.212202400
  After    ... *elapsed time=0.207197400
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.190180600
  After    ... *elapsed time=0.037035800
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.966919500
  After    ... *elapsed time=0.427407100
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108104400
  After    ... *elapsed time=0.027025800
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.359342200
  After    ... *elapsed time=0.130122100
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.696665400
  After    ... *elapsed time=0.336320300
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108102400
  After    ... *elapsed time=0.088084400
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.169161000
  After    ... *elapsed time=0.155147900
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.436415300
  After    ... *elapsed time=0.933888000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.128122300
  After    ... *elapsed time=0.050048400
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.247235000
  After    ... *elapsed time=0.179171500
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
