----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.014219000
  After1   ... *elapsed time=0.012228000
  After2   ... *elapsed time=0.013377000
  Appendix ... *elapsed time=0.085409000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.086390000
  After1   ... *elapsed time=0.061366000
  After2   ... *elapsed time=0.102053000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.195927000  sum=-1390256896
  After    ... *elapsed time=0.020196000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.368471000  sum=589612288
  After    ... *elapsed time=0.024804000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.488110000  count=35860000
  After    ... *elapsed time=0.293951000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.544747000
  After1   ... *elapsed time=0.142033000
  After2   ... *elapsed time=0.074088000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.194505000
  After    ... *elapsed time=0.179944000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.493157000
  After    ... *elapsed time=0.054575000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.728072000
  After    ... *elapsed time=0.328025000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.065437000
  After    ... *elapsed time=0.022945000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.183339000
  After    ... *elapsed time=0.102009000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.719958000
  After    ... *elapsed time=0.393238000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.172441000
  After    ... *elapsed time=0.075249000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.441524000
  After    ... *elapsed time=0.135160000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=7.164520000
  After1   ... *elapsed time=0.796733000
  After2(bm).. *elapsed time=1.958305000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064549000
  After    ... *elapsed time=0.042078000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.250863000
  After    ... *elapsed time=0.143133000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
