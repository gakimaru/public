----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.097091200
  After1   ... *elapsed time=0.026024400
  After2   ... *elapsed time=0.027027000
  Appendix ... *elapsed time=0.213202900  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.063060100
  After1   ... *elapsed time=0.058055200
  After2   ... *elapsed time=0.059056300
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.207197700  sum=1974919424
  After    ... *elapsed time=0.055052200  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.401381000  sum=-525080576
  After    ... *elapsed time=0.058055700  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.651621200  count=36760000
  After    ... *elapsed time=0.556529100  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.272259200
  After1   ... *elapsed time=0.125119400
  After2   ... *elapsed time=0.071067800
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.242230500
  After    ... *elapsed time=0.206195900
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.192184200
  After    ... *elapsed time=0.037035200
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.855814200
  After    ... *elapsed time=0.381363900
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.107102100
  After    ... *elapsed time=0.026024300
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.414395700
  After    ... *elapsed time=0.129122900
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.722688300
  After    ... *elapsed time=0.337319700
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.109103800
  After    ... *elapsed time=0.088085100
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.167159500
  After    ... *elapsed time=0.156147500
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.423404500
  After    ... *elapsed time=0.936891900
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.128122000
  After    ... *elapsed time=0.052048400
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.247236700
  After    ... *elapsed time=0.204193500
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
