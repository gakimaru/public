----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.013116000
  After1   ... *elapsed time=0.012202000
  After2   ... *elapsed time=0.013462000
  Appendix ... *elapsed time=0.061942000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.075607000
  After1   ... *elapsed time=0.089803000
  After2   ... *elapsed time=0.108081000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.164264000  sum=-1390256896
  After    ... *elapsed time=0.020462000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.339091000  sum=589612288
  After    ... *elapsed time=0.025170000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.448074000  count=35860000
  After    ... *elapsed time=0.319041000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.544652000
  After1   ... *elapsed time=0.135722000
  After2   ... *elapsed time=0.073905000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.250978000
  After    ... *elapsed time=0.183457000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.495320000
  After    ... *elapsed time=0.054169000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.725637000
  After    ... *elapsed time=0.325800000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.065432000
  After    ... *elapsed time=0.023249000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.179769000
  After    ... *elapsed time=0.100954000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.728769000
  After    ... *elapsed time=0.381110000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.173406000
  After    ... *elapsed time=0.073882000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.438630000
  After    ... *elapsed time=0.135705000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=4.306577000
  After    ... *elapsed time=0.868322000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.073303000
  After    ... *elapsed time=0.041654000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.251075000
  After    ... *elapsed time=0.159250000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
