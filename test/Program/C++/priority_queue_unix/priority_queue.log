--------------------------------------------------------------------------------
[Test for priority_queue::container_adapter(Priority Queue)]

--- Enqueue ---
[3: 0(seq=0)]
[3: 1(seq=1)]
[3: 2(seq=2)]
[4: 3(seq=3)]
[5: 4(seq=4)]
[4: 5(seq=5)]
[5: 6(seq=6)]
[3: 7(seq=7)]
[5: 8(seq=8)]
[3: 9(seq=9)]
[4:10(seq=10)]
[4:11(seq=11)]
[2:12(seq=12)]
[3:13(seq=13)]
[2:14(seq=14)]
[5:15(seq=15)]
[1:16(seq=16)]
[5:17(seq=17)]
[2:18(seq=18)]
[2:19(seq=19)]
*elapsed_time=0.000084000 sec

--- Show tree (count=20) ---
depth_max=4 (limit for showing=4)
                      .----------------------{5: 4}----------------------.                      
          .----------{5: 8}----------.                    .----------{5: 6}----------.          
    .----{5:15}----.        .----{4:10}----.        .----{4:11}----.        .----{4: 5}----.    
 .-{4: 3}-.  .-{5:17}-.  .-{3: 9]      [3: 0]      [3: 2]      [2:12]      [3:13]      [2:14]   
[3: 7][1:16][3: 1][2:18][2:19]                                                                  

--- Dequeue ---
[5: 4] [5: 6] [5: 8] 
*elapsed_time=0.000004000 sec

--- Show tree (count=17) ---
depth_max=4 (limit for showing=4)
                      .----------------------{5:15}----------------------.                      
          .----------{5:17}----------.                    .----------{4: 5}----------.          
    .----{4: 3}----.        .----{4:10}----.        .----{4:11}----.        .----{3:13}----.    
 .-{3: 7}-.    [3: 1]      [3: 9]      [3: 0]      [3: 2]      [2:12]      [2:19]      [2:14]   
[2:18][1:16]                                                                                    

--- Change Priority ---
[5:15(seq=15)] -> [5:15(seq=20)]
*elapsed_time=0.000003000 sec

--- Change Priority ---
[5:17(seq=17)] -> [2:17(seq=21)]
*elapsed_time=0.000010000 sec

--- Change Priority ---
[5:15(seq=20)] -> [4:15(seq=22)]
*elapsed_time=0.000009000 sec

--- Show tree (count=17) ---
depth_max=4 (limit for showing=4)
                      .----------------------{4: 3}----------------------.                      
          .----------{4:10}----------.                    .----------{4: 5}----------.          
    .----{3: 1}----.        .----{4:15}----.        .----{4:11}----.        .----{3:13}----.    
 .-{3: 7}-.    [2:17]      [3: 9]      [3: 0]      [3: 2]      [2:12]      [2:19]      [2:14]   
[2:18][1:16]                                                                                    

--- Dequeue ---
[4: 3] [4: 5] [4:10] [4:11] [4:15] [3: 0] [3: 1] [3: 2] [3: 7] [3: 9] 
*elapsed_time=0.000009000 sec

--- Show tree (count=7) ---
depth_max=2 (limit for showing=4)
    .----{3:13}----.    
 .-{2:14}-.  .-{2:12}-. 
[2:17][2:19][1:16][2:18]

--- Dequeue ---
[3:13] [2:12] [2:14] [2:18] [2:19] [2:17] [1:16] 
*elapsed_time=0.000006000 sec

--- Show tree (count=0) ---
depth_max=-1 (limit for showing=4)

--- Enqueue ---
[3: 0(seq=0)]
[3: 1(seq=1)]
[3: 2(seq=2)]
[4: 3(seq=3)]
[5: 4(seq=4)]
[4: 5(seq=5)]
[5: 6(seq=6)]
[3: 7(seq=7)]
[5: 8(seq=8)]
[3: 9(seq=9)]
[4:10(seq=10)]
[4:11(seq=11)]
[2:12(seq=12)]
[3:13(seq=13)]
[2:14(seq=14)]
[5:15(seq=15)]
[1:16(seq=16)]
[5:17(seq=17)]
[2:18(seq=18)]
[2:19(seq=19)]
*elapsed_time=0.000025000 sec

--------------------------------------------------------------------------------
[Test for binary_heap::container(Binary Heap)]

--- Push nodes(Binary Heap) ---
[3: 0]
[3: 1]
[3: 2]
[4: 3]
[5: 4]
[4: 5]
[5: 6]
[3: 7]
[5: 8]
[3: 9]
[4:10]
[4:11]
[2:12]
[3:13]
[2:14]
[5:15]
[1:16]
[5:17]
[2:18]
[2:19]
*elapsed_time=0.000030000 sec

--- Show tree (count=20) ---
depth_max=4 (limit for showing=4)
                      .----------------------{5: 4}----------------------.                      
          .----------{5: 8}----------.                    .----------{5: 6}----------.          
    .----{5:15}----.        .----{4:10}----.        .----{4:11}----.        .----{4: 5}----.    
 .-{4: 3}-.  .-{5:17}-.  .-{3: 9]      [3: 0]      [3: 2]      [2:12]      [3:13]      [2:14]   
[3: 7][1:16][3: 1][2:18][2:19]                                                                  

--- Pop nodes(Binary Heap) ---
[5: 4] [5: 6] [5: 8] [5:15] [5:17] [4: 5] [4:11] [4:10] [4: 3] [3:13] 
*elapsed_time=0.000008000 sec

--- Show tree (count=10) ---
depth_max=3 (limit for showing=4)
          .----------{3: 2}----------.          
    .----{3: 0}----.        .----{2:19}----.    
 .-{3: 1}-.  .-{3: 9]      [2:18]      [1:16]   
[3: 7][2:14][2:12]                              

--- Pop nodes(Binary Heap) ---
[3: 2] [3: 0] [3: 9] [3: 1] [3: 7] [2:19] [2:18] [2:12] [2:14] [1:16] 
*elapsed_time=0.000009000 sec

--- Show tree (count=0) ---
depth_max=-1 (limit for showing=4)

--------------------------------------------------------------------------------
[Test for std::priority_queue(STL)]

--- Push nodes(STL) ---
[3: 0]
[3: 1]
[3: 2]
[4: 3]
[5: 4]
[4: 5]
[5: 6]
[3: 7]
[5: 8]
[3: 9]
[4:10]
[4:11]
[2:12]
[3:13]
[2:14]
[5:15]
[1:16]
[5:17]
[2:18]
[2:19]
*elapsed_time=0.000027000 sec

--- Pop nodes(STL) ---
[5: 4] [5: 6] [5: 8] [5:15] [5:17] [4: 5] [4:11] [4:10] [4: 3] [3:13] 
*elapsed_time=0.000016000 sec

--- Pop nodes(STL) ---
[3: 2] [3: 0] [3: 9] [3: 1] [3: 7] [2:19] [2:18] [2:12] [2:14] [1:16] 
*elapsed_time=0.000015000 sec

--------------------------------------------------------------------------------
[Test for priority_queue::container_adapter(Priority Queue)] *Second time

--- Enqueue ---
[3: 0(seq=20)]
[3: 1(seq=21)]
[3: 2(seq=22)]
[4: 3(seq=23)]
[5: 4(seq=24)]
[4: 5(seq=25)]
[5: 6(seq=26)]
[3: 7(seq=27)]
[5: 8(seq=28)]
[3: 9(seq=29)]
[4:10(seq=30)]
[4:11(seq=31)]
[2:12(seq=32)]
[3:13(seq=33)]
[2:14(seq=34)]
[5:15(seq=35)]
[1:16(seq=36)]
[5:17(seq=37)]
[2:18(seq=38)]
[2:19(seq=39)]
*elapsed_time=0.000033000 sec

--- Show tree (count=40) ---
depth_max=5 (limit for showing=4)
                      .----------------------{5: 4}----------------------.                      
          .----------{5: 8}----------.                    .----------{5: 6}----------.          
    .----{5:15}----.        .----{4:10}----.        .----{5: 4}----.        .----{5: 8}----.    
 .-{4: 3}-.  .-{5:17}-.  .-{3: 9}-.  .-{3: 0}-.  .-{4:11}-.  .-{5: 6}-.  .-{4: 5}-.  .-{4:10}-. 
{4:11}{3:13}{5:15}{5:17}{2:19][3: 0][3: 1][3: 2][3: 2][4: 3][2:12][4: 5][3: 7][3:13][2:14][3: 9]

--- Dequeue ---
[5: 4] [5: 6] [5: 8] [5:15] [5:17] [5: 4] [5: 6] [5: 8] [5:15] [5:17] 
*elapsed_time=0.000010000 sec

--- Show tree (count=30) ---
depth_max=4 (limit for showing=4)
                      .----------------------{4: 3}----------------------.                      
          .----------{4:10}----------.                    .----------{4: 5}----------.          
    .----{4:11}----.        .----{3: 0}----.        .----{4:11}----.        .----{4:10}----.    
 .-{3: 7}-.  .-{3: 1}-.  .-{3: 9}-.  .-{3: 1}-.  .-{4: 3}-.  .-{4: 5}-.  .-{3:13}-.  .-{3: 9]   
[2:12][3:13][2:18][2:18][2:19][3: 0][1:16][3: 2][3: 2][1:16][2:12][2:19][3: 7][2:14][2:14]      

--- Dequeue ---
[4: 3] [4: 5] [4:10] [4:11] [4: 3] [4: 5] [4:10] [4:11] [3: 0] [3: 1] [3: 2] [3: 7] [3: 9] [3:13] [3: 0] [3: 1] [3: 2] [3: 7] [3: 9] [3:13] 
*elapsed_time=0.000018000 sec

--- Show tree (count=10) ---
depth_max=3 (limit for showing=4)
          .----------{2:12}----------.          
    .----{2:18}----.        .----{2:14}----.    
 .-{2:12}-.  .-{2:19]      [2:14]      [1:16]   
[2:18][2:19][1:16]                              

--------------------------------------------------------------------------------
[Test for priority_queue::container_adapter(Priority Queue)] *Clear

--- Enqueue ---
[3: 0(seq=40)]
[3: 1(seq=41)]
[3: 2(seq=42)]
[4: 3(seq=43)]
[5: 4(seq=44)]
[4: 5(seq=45)]
[5: 6(seq=46)]
[3: 7(seq=47)]
[5: 8(seq=48)]
[3: 9(seq=49)]
[4:10(seq=50)]
[4:11(seq=51)]
[2:12(seq=52)]
[3:13(seq=53)]
[2:14(seq=54)]
[5:15(seq=55)]
[1:16(seq=56)]
[5:17(seq=57)]
[2:18(seq=58)]
[2:19(seq=59)]
*elapsed_time=0.000027000 sec

--- Show tree (count=30) ---
depth_max=4 (limit for showing=4)
                      .----------------------{5: 4}----------------------.                      
          .----------{5: 6}----------.                    .----------{5:15}----------.          
    .----{5: 8}----.        .----{4:10}----.        .----{4: 3}----.        .----{5:17}----.    
 .-{2:12}-.  .-{4: 5}-.  .-{3: 9}-.  .-{4:11}-.  .-{3:13}-.  .-{3: 2}-.  .-{3: 0}-.  .-{3: 1]   
[2:18][2:12][2:19][3: 7][1:16][2:18][2:19][2:12][2:14][2:14][2:14][1:16][1:16][2:18][2:19]      

--- Clear ---
OK
*elapsed_time=0.000001000 sec

--- Show tree (count=0) ---
depth_max=-1 (limit for showing=4)

--------------------------------------------------------------------------------
[Test for priority_queue::container_adapter(Priority Queue)] *Pointer

pop: [5: 4](seq=3)
pop: [4: 2](seq=1)
pop: [3: 1](seq=0)
pop: [2: 3](seq=2)
pop: [1: 5](seq=4)

--- end ---
*elapsed_time=0.001482000 sec
