----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.013356000
  After1   ... *elapsed time=0.012412000
  After2   ... *elapsed time=0.013524000
  Appendix ... *elapsed time=0.054468000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.057829000
  After1   ... *elapsed time=0.057667000
  After2   ... *elapsed time=0.057756000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.162001000  sum=-1390256896
  After    ... *elapsed time=0.020236000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.377426000  sum=589612288
  After    ... *elapsed time=0.025079000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.449944000  count=35860000
  After    ... *elapsed time=0.327733000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.541631000
  After1   ... *elapsed time=0.138210000
  After2   ... *elapsed time=0.074726000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.196194000
  After    ... *elapsed time=0.198441000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.494889000
  After    ... *elapsed time=0.055728000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.764248000
  After    ... *elapsed time=0.325201000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064891000
  After    ... *elapsed time=0.022576000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.184666000
  After    ... *elapsed time=0.100318000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.734310000
  After    ... *elapsed time=0.346658000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.170642000
  After    ... *elapsed time=0.073754000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.443613000
  After    ... *elapsed time=0.134691000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=7.155604000
  After    ... *elapsed time=0.797612000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.073204000
  After    ... *elapsed time=0.042501000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.251952000
  After    ... *elapsed time=0.142275000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
