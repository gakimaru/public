----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.012270000
  After1   ... *elapsed time=0.012105000
  After2   ... *elapsed time=0.013363000
  Appendix ... *elapsed time=0.054279000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.058055000
  After1   ... *elapsed time=0.061605000
  After2   ... *elapsed time=0.057580000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.162084000  sum=-1390256896
  After    ... *elapsed time=0.020356000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.324361000  sum=589612288
  After    ... *elapsed time=0.025443000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.530664000  count=35860000
  After    ... *elapsed time=0.312862000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.545699000
  After1   ... *elapsed time=0.136356000
  After2   ... *elapsed time=0.075091000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.195877000
  After    ... *elapsed time=0.237534000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.492059000
  After    ... *elapsed time=0.053724000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.734600000
  After    ... *elapsed time=0.328271000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.065285000
  After    ... *elapsed time=0.020137000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.173298000
  After    ... *elapsed time=0.099465000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.714174000
  After    ... *elapsed time=0.325764000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.172607000
  After    ... *elapsed time=0.061000000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.441861000
  After    ... *elapsed time=0.145398000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=4.453139000
  After    ... *elapsed time=0.849263000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064483000
  After    ... *elapsed time=0.102839000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.249485000
  After    ... *elapsed time=0.383954000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
