----------------------------------------
[Optimize Test 01]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.142984000  sum=50235
  After1   ... *elapsed time=0.125223000  sum=50235
  After2   ... *elapsed time=0.125929000  sum=50235
  After3   ... *elapsed time=0.165767000  sum=50235
  After4   ... *elapsed time=0.171948000  sum=50235
  Appendix ... *elapsed time=0.558371000  sum=50235
----------------------------------------
[Optimize Test 02]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.632315000  sum=60686346
  After1   ... *elapsed time=0.637794000  sum=60686346
  After2   ... *elapsed time=0.651627000  sum=60686346
  After3   ... *elapsed time=0.653967000  sum=60686346
----------------------------------------
[Optimize Test 03]
Type1: *100000000 times repeated.
  Before   ... *elapsed time=0.189539000  sum=-1390256896
  After    ... *elapsed time=0.020577000  sum=-1390256896
Type2: *100000000 times repeated.
  Before   ... *elapsed time=0.396258000  sum=589612288
  After    ... *elapsed time=0.025239000  sum=589612288
Type3: *10000 times repeated.
  Before   ... *elapsed time=0.615259000  count=45010000
  After1   ... *elapsed time=0.445467000  count=45010000
  After2   ... *elapsed time=0.361878000  count=45010000
  After3   ... *elapsed time=0.354335000  count=45010000
  AppendixA1.. *elapsed time=0.683156000  count=45010000
  AppendixA2.. *elapsed time=0.674491000  count=45010000
  AppendixA3.. *elapsed time=0.606810000  count=45010000
  AppendixB1.. *elapsed time=0.643619000  count=45010000
  AppendixB2.. *elapsed time=0.633902000  count=45010000
  AppendixB3.. *elapsed time=0.628860000  count=45010000
----------------------------------------
[Optimize Test 04]
Type1: *10000 times repeated.
  Before   ... *elapsed time=0.539027000
  After1   ... *elapsed time=0.134590000
  After2   ... *elapsed time=0.073670000
----------------------------------------
[Optimize Test 05]
Type1: *10000000 times repeated.
  Before   ... *elapsed time=0.195096000
  After    ... *elapsed time=0.180331000
----------------------------------------
[Optimize Test 06]
Type1: *10000 times repeated.
  Before   ... *elapsed time=0.489653000
  After    ... *elapsed time=0.053620000
----------------------------------------
[Optimize Test 07]
Type1: *10000000 times repeated.
  Before   ... *elapsed time=0.721039000
  After    ... *elapsed time=0.323410000
Type2: *1000000 times repeated.
Type2(strlen):
  Before   ... *elapsed time=0.064169000
  After    ... *elapsed time=0.022296000
Type2(strcmp):
  Before   ... *elapsed time=0.166849000
  After    ... *elapsed time=0.100423000
Type2(strncmp):
  Before   ... *elapsed time=0.714474000
  After    ... *elapsed time=0.341276000
Type2(strchr):
  Before   ... *elapsed time=0.177457000
  After    ... *elapsed time=0.075872000
Type2(strrchr):
  Before   ... *elapsed time=0.442661000
  After    ... *elapsed time=0.134921000
Type2(strstr):
  Before   ... *elapsed time=6.972809000
  After1   ... *elapsed time=0.734156000
  After2(bm).. *elapsed time=1.896724000
Type2(strcpy):
  Before   ... *elapsed time=0.069376000
  After    ... *elapsed time=0.041312000
Type2(strncpy):
  Before   ... *elapsed time=0.275527000
  After    ... *elapsed time=0.155523000
----------------------------------------
[Optimize Test 08]
Type1: *100000000 times repeated.
  Before   ... *elapsed time=0.991073000
  After1   ... *elapsed time=0.964638000
  After2   ... *elapsed time=0.657279000
  After3   ... *elapsed time=0.850088000
Type2: *100000000 times repeated.
  Before   ... *elapsed time=0.642343000
  After1   ... *elapsed time=0.618335000
  After2   ... *elapsed time=0.658423000
  After3   ... *elapsed time=0.591416000
Type3: *100000000 times repeated.
  Before   ... *elapsed time=0.351093000
  After1   ... *elapsed time=0.347746000
Type4: *100000000 times repeated.
  Before   ... *elapsed time=0.648002000
  After1   ... *elapsed time=0.651650000
  After2   ... *elapsed time=0.509651000
Type5: *10000000 times repeated.
  Before   ... *elapsed time=0.873298000
  After1   ... *elapsed time=0.114514000
  After2   ... *elapsed time=0.431909000
Type6: *10000000 times repeated.
  Before   ... *elapsed time=0.099364000
  After1   ... *elapsed time=0.199993000
  After2   ... *elapsed time=0.096437000
Type7: *10000000 times repeated.
  Before   ... *elapsed time=0.101809000
  After1   ... *elapsed time=0.191515000
  After2   ... *elapsed time=0.074274000
Type8: *100000000 times repeated.
  Before   ... *elapsed time=0.508146000
  After1   ... *elapsed time=0.485128000
  After2   ... *elapsed time=0.507689000
Type9: *100000000 times repeated.
  Before   ... *elapsed time=0.538312000
  After1   ... *elapsed time=0.566540000
  After2   ... *elapsed time=0.488950000
----------------------------------------
[Optimize Test 09]
Type1: *100000 times repeated.
  Before   ... *elapsed time=0.128362000  sum=50235
  After1   ... *elapsed time=0.171186000  sum=50235
  After2   ... *elapsed time=0.119636000  sum=50235
  After3   ... *elapsed time=0.153628000  sum=50235
  After4   ... *elapsed time=0.148558000  sum=50235
  After5   ... *elapsed time=0.083092000  sum=50235
  Appendix ... *elapsed time=0.118843000  sum=50235
Type2: *50000 times repeated.
  Before   ... *elapsed time=0.544693000  sum=49
  After1   ... *elapsed time=0.540423000  sum=49
  After2   ... *elapsed time=0.542511000  sum=49
  After3   ... *elapsed time=0.538660000  sum=49
  After4   ... *elapsed time=0.544578000  sum=49
  After5   ... *elapsed time=0.557980000  sum=49
  Appendix ... *elapsed time=0.548090000  sum=49
Type3: *50000 times repeated.
  Before   ... *elapsed time=0.543405000  sum=49
  After1   ... *elapsed time=0.541825000  sum=49
  After2   ... *elapsed time=0.543353000  sum=49
  After3   ... *elapsed time=0.540083000  sum=49
  After4   ... *elapsed time=0.542689000  sum=49
  After5   ... *elapsed time=0.565917000  sum=49
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
