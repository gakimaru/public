----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.013100000
  After1   ... *elapsed time=0.012206000
  After2   ... *elapsed time=0.013746000
  Appendix ... *elapsed time=0.055301000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.060514000
  After1   ... *elapsed time=0.059081000
  After2   ... *elapsed time=0.089762000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.177780000  sum=-1390256896
  After    ... *elapsed time=0.020465000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.363796000  sum=589612288
  After    ... *elapsed time=0.025198000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.501317000  count=35860000
  After    ... *elapsed time=0.298498000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.547596000
  After1   ... *elapsed time=0.138011000
  After2   ... *elapsed time=0.084177000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.195328000
  After    ... *elapsed time=0.181306000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.497197000
  After    ... *elapsed time=0.054906000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.758139000
  After    ... *elapsed time=0.324673000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064292000
  After    ... *elapsed time=0.021986000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.166603000
  After    ... *elapsed time=0.115590000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.726130000
  After    ... *elapsed time=0.352600000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.187170000
  After    ... *elapsed time=0.073751000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.438982000
  After    ... *elapsed time=0.135248000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=7.427499000
  After1   ... *elapsed time=0.789489000
  After2(bm).. *elapsed time=1.878619000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064625000
  After    ... *elapsed time=0.041607000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.249291000
  After    ... *elapsed time=0.141431000
----------------------------------------
[Optimize Test 08]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.966965000
  After1   ... *elapsed time=0.992410000
  After2   ... *elapsed time=0.599791000
  After3   ... *elapsed time=0.852185000
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.616466000
  After1   ... *elapsed time=0.647120000
  After2   ... *elapsed time=0.600749000
  After3   ... *elapsed time=0.645326000
Type3: *repeated * 100000000 times.
  Before   ... *elapsed time=0.346621000
  After1   ... *elapsed time=0.348454000
Type4: *repeated * 100000000 times.
  Before   ... *elapsed time=0.644723000
  After1   ... *elapsed time=0.653058000
  After2   ... *elapsed time=0.496271000
Type5: *repeated * 10000000 times.
  Before   ... *elapsed time=0.908639000
  After1   ... *elapsed time=0.114341000
  After2   ... *elapsed time=0.432753000
Type6: *repeated * 10000000 times.
  Before   ... *elapsed time=0.097117000
  After1   ... *elapsed time=0.200170000
  After2   ... *elapsed time=0.091403000
Type7: *repeated * 10000000 times.
  Before   ... *elapsed time=0.111100000
  After1   ... *elapsed time=0.194947000
  After2   ... *elapsed time=0.081063000
Type8: *repeated * 100000000 times.
  Before   ... *elapsed time=0.483437000
  After1   ... *elapsed time=0.522247000
  After2   ... *elapsed time=0.482565000
Type9: *repeated * 100000000 times.
  Before   ... *elapsed time=0.571116000
  After1   ... *elapsed time=0.539222000
  After2   ... *elapsed time=0.527728000
----------------------------------------
[Optimize Test 09]
Type1: *repeated * 100000 times.
  Before   ... *elapsed time=0.118842000
  After1   ... *elapsed time=0.173258000
  After2   ... *elapsed time=0.120802000
  After3   ... *elapsed time=0.149250000
  After4   ... *elapsed time=0.149393000
  After5   ... *elapsed time=0.084295000
  After6   ... *elapsed time=0.120592000
Type2: *repeated * 50000 times.
  Before   ... *elapsed time=0.540075000
  After1   ... *elapsed time=0.547008000
  After2   ... *elapsed time=0.546049000
  After3   ... *elapsed time=0.538321000
  After4   ... *elapsed time=0.546689000
  After5   ... *elapsed time=0.564044000
  After6   ... *elapsed time=0.542393000
Type3: *repeated * 50000 times.
  Before   ... *elapsed time=0.582767000
  After1   ... *elapsed time=0.544867000
  After2   ... *elapsed time=0.547338000
  After3   ... *elapsed time=0.540806000
  After4   ... *elapsed time=0.542816000
  After5   ... *elapsed time=0.561658000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
