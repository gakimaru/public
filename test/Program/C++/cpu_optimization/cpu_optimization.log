----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.096090300
  After1   ... *elapsed time=0.026024700
  After2   ... *elapsed time=0.027026700
  Appendix ... *elapsed time=0.195186800  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.054051300
  After1   ... *elapsed time=0.058054600
  After2   ... *elapsed time=0.058056000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.190181200  sum=1974919424
  After    ... *elapsed time=0.055051100  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.439419400  sum=-525080576
  After    ... *elapsed time=0.058055100  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.608580400  count=36760000
  After    ... *elapsed time=0.567540000  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.269255700
  After1   ... *elapsed time=0.123117300
  After2   ... *elapsed time=0.072069200
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.209199500
  After    ... *elapsed time=0.206195600
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.193183600
  After    ... *elapsed time=0.036034300
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.918875200
  After    ... *elapsed time=0.369350800
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.106101200
  After    ... *elapsed time=0.031029300
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.402383900
  After    ... *elapsed time=0.130124300
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.664632700
  After    ... *elapsed time=0.506481600
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.136129600
  After    ... *elapsed time=0.160152500
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.217217300
  After    ... *elapsed time=0.191173400
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.387368900
  After    ... *elapsed time=0.993944700
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.129122900
  After    ... *elapsed time=0.052049600
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.246234600
  After    ... *elapsed time=0.233222300
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
