----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.093089200
  After1   ... *elapsed time=0.025023200
  After2   ... *elapsed time=0.035034000
  Appendix ... *elapsed time=0.194183300  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.060057200
  After1   ... *elapsed time=0.059056300
  After2   ... *elapsed time=0.058055700
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.213203600  sum=1974919424
  After    ... *elapsed time=0.056054200  sum=1974919424
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.435419400  sum=-525080576
  After    ... *elapsed time=0.057049600  sum=-525080576
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.608579500  count=36760000
  After    ... *elapsed time=0.519494800  count=36760000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.270255400
  After1   ... *elapsed time=0.124118200
  After2   ... *elapsed time=0.073069500
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.210200100
  After    ... *elapsed time=0.259246900
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.195187100
  After    ... *elapsed time=0.059056900
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.877835300
  After    ... *elapsed time=0.453430900
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.105100900
  After    ... *elapsed time=0.027026100
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.358340500
  After    ... *elapsed time=0.138132800
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.704671100
  After    ... *elapsed time=0.513488300
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.108101500
  After    ... *elapsed time=0.124119400
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.171161900
  After    ... *elapsed time=0.154146900
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.426406200
  After    ... *elapsed time=0.764729100
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.126121100
  After    ... *elapsed time=0.050046400
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.244233400
  After    ... *elapsed time=0.255242300
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
