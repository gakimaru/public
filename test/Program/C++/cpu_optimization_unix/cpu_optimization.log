----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.013541000
  After1   ... *elapsed time=0.012313000
  After2   ... *elapsed time=0.014043000
  Appendix ... *elapsed time=0.055249000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.059403000
  After1   ... *elapsed time=0.062853000
  After2   ... *elapsed time=0.058188000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.180336000  sum=-1390256896
  After    ... *elapsed time=0.020344000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.327174000  sum=589612288
  After    ... *elapsed time=0.025287000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.499333000  count=35860000
  After    ... *elapsed time=0.299304000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.546972000
  After1   ... *elapsed time=0.136914000
  After2   ... *elapsed time=0.075313000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.196543000
  After    ... *elapsed time=0.184819000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.494975000
  After    ... *elapsed time=0.054296000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.861886000
  After    ... *elapsed time=0.327824000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.065502000
  After    ... *elapsed time=0.022314000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.170423000
  After    ... *elapsed time=0.102092000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.759192000
  After    ... *elapsed time=0.382091000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.180955000
  After    ... *elapsed time=0.073686000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.498556000
  After    ... *elapsed time=0.137608000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=7.253789000
  After1   ... *elapsed time=0.783437000
  After2(bm).. *elapsed time=1.932970000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064874000
  After    ... *elapsed time=0.041784000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.253207000
  After    ... *elapsed time=0.142759000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
