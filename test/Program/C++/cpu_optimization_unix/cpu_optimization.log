----------------------------------------
[Optimize Test 01]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.015724000
  After1   ... *elapsed time=0.012777000
  After2   ... *elapsed time=0.013431000
  Appendix ... *elapsed time=0.054709000  *Appendix is most brief style with C++11
----------------------------------------
[Optimize Test 02]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.057385000
  After1   ... *elapsed time=0.057265000
  After2   ... *elapsed time=0.096984000
----------------------------------------
[Optimize Test 03]
Type1: *repeated * 100000000 times.
  Before   ... *elapsed time=0.209092000  sum=-1390256896
  After    ... *elapsed time=0.036726000  sum=-1390256896
Type2: *repeated * 100000000 times.
  Before   ... *elapsed time=0.340357000  sum=589612288
  After    ... *elapsed time=0.025493000  sum=589612288
Type3: *repeated * 10000 times.
  Before   ... *elapsed time=0.449422000  count=35860000
  After    ... *elapsed time=0.313916000  count=35860000
----------------------------------------
[Optimize Test 04]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.549405000
  After1   ... *elapsed time=0.136061000
  After2   ... *elapsed time=0.074941000
----------------------------------------
[Optimize Test 05]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.196302000
  After    ... *elapsed time=0.185473000
----------------------------------------
[Optimize Test 06]
Type1: *repeated * 10000 times.
  Before   ... *elapsed time=0.497001000
  After    ... *elapsed time=0.055381000
----------------------------------------
[Optimize Test 07]
Type1: *repeated * 10000000 times.
  Before   ... *elapsed time=0.785685000
  After    ... *elapsed time=0.381104000
Type2(strlen): *repeated * 1000000 times.
  Before   ... *elapsed time=0.064874000
  After    ... *elapsed time=0.022742000
Type2(strcmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.177929000
  After    ... *elapsed time=0.146707000
Type2(strncmp): *repeated * 1000000 times.
  Before   ... *elapsed time=0.797488000
  After    ... *elapsed time=0.390839000
Type2(strchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.171255000
  After    ... *elapsed time=0.074401000
Type2(strrchr): *repeated * 1000000 times.
  Before   ... *elapsed time=0.434227000
  After    ... *elapsed time=0.135491000
Type2(strstr): *repeated * 1000000 times.
  Before   ... *elapsed time=4.216422000
  After    ... *elapsed time=0.675352000
Type2(strcpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.072521000
  After    ... *elapsed time=0.042351000
Type2(strncpy): *repeated * 1000000 times.
  Before   ... *elapsed time=0.250278000
  After    ... *elapsed time=0.170394000
----------------------------------------
[Test for Lambda with closure]
for lambda1: external_counter=0
for lambda2: local_counter=0
for lambda3: static_counter=0
Call lambda in block with counter in setLambda().
lambda1()=1, lambda2()=1, lambda3()=1
lambda1()=2, lambda2()=2, lambda3()=2
lambda1()=3, lambda2()=3, lambda3()=3
dummy=999
Call lambda in block without counter in setLambda().
lambda1()=4, lambda2()=4, lambda3()=4
lambda1()=5, lambda2()=5, lambda3()=5
lambda1()=6, lambda2()=6, lambda3()=6
Call lambda in main().
lambda1()=7, lambda2()=NG!, lambda3()=7
lambda1()=8, lambda2()=NG!, lambda3()=8
lambda1()=9, lambda2()=NG!, lambda3()=9
